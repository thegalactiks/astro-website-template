---
import { getPageByIdentifier, type Article } from "@galactiks/explorer";

import { dynamicViteAssetImport } from "@lib/image.mjs";
import Picture from "./Picture.astro"
import Time from "./Time.astro";

type Props = { class?: string; article: Article };

const { class: className, article } = Astro.props;
const isPartOf =
  article.isPartOf && (await getPageByIdentifier(article.isPartOf));
---

<div class:list={["group cursor-pointer", className]}>
  <div class="rounded-md bg-primary-background transition-all hover:scale-105">
    {
      article.image && (
        <a
          class="relative block aspect-square"
          href={article.path || article.url}
        >
          <Picture
            src={article.image.contentUrl}
            widths={[100, 300, 600]}
            alt={article.image.name || article.name}
            class="object-cover transition-all"
          />
        </a>
      )
    }
  </div>
  <div>
    <div>
      <a href={article.path || article.url} class="no-underline">
        <h2 class="text-lg font-semibold leading-snug tracking-tight my-2">
          {article.name}
        </h2>
      </a>
      {
        isPartOf && (
          <div class="flex gap-3">
            <a href={isPartOf.path}>
              <span class="inline-block text-xs font-medium tracking-wider uppercase mt-5 text-emerald-700">
                {isPartOf.name}
              </span>
            </a>
          </div>
        )
      }
      <div class="mt-2 flex items-center space-x-3 text-gray-500">
        <div class="flex items-center gap-3">
          {
            article.author && (
              <>
                {article.author?.image && (
                  <div class="relative h-5 w-5 flex-shrink-0">
                    <Picture
                      src={article.author.image.contentUrl}
                      alt={article.author.image.description || article.name}
                      widths={[20, 50]}
                      class="rounded-full"
                    />
                  </div>
                )}
                <span class="truncate text-sm">{article.author?.name}</span>
                <span class="text-xs text-gray-300">â€¢</span>
              </>
            )
          }
          <Time
            class="truncate text-sm"
            inLanguage={article.inLanguage}
            datetime={article.datePublished}
          />
        </div>
      </div>
    </div>
  </div>
</div>
