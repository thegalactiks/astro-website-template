---
import type { Content } from "@galactiks/explorer";

type Props = {
  currentLang?: string;
  languages: Array<{ href: string; hreflang: string }>;
};
const { currentLang = "en", languages } = Astro.props;

const languageNames = new Intl.DisplayNames([currentLang], {
  languageDisplay: "standard",
  style: "short",
  type: "language",
});
---

<div class="relative inline-block text-left language-menu">
  <button
    id="language-selector-menu"
    type="button"
    class="inline-flex w-full justify-center gap-x-1.5 rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50"
    aria-haspopup="true"
    aria-owns="language-menu"
    aria-label="Current language is English. Choose your preferred language."
  >
    {languageNames.of(currentLang)}
    <svg
      class="-mr-1 h-5 w-5 text-gray-400"
      viewBox="0 0 20 20"
      fill="currentColor"
      aria-hidden="true"
    >
      <path
        fill-rule="evenodd"
        d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z"
        clip-rule="evenodd"></path>
    </svg>
  </button>
  <ul
    id="language-menu"
    class="hidden absolute right-0 z-10 mt-2 w-56 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="menu-button"
    tabindex="-1"
  >
    {
      languages
        .filter((alternate) => alternate.hreflang !== "x-default")
        .sort((a, b) => a.hreflang.localeCompare(b.hreflang))
        .map(({ href, hreflang }) => (
          <li lang={hreflang} role="menuitem" tabindex="-1">
            <a
              class="text-gray-700 hover:text-gray-900 hover:bg-gray-100 block px-4 py-2 text-sm"
              href={href}
              title={hreflang}
            >
              <bdi>{languageNames.of(hreflang)}</bdi>
            </a>
          </li>
        ))
    }
  </ul>
</div>

<script>
  const button = document.querySelector("button#language-selector-menu");
  const languageMenu = document.querySelector("ul#language-menu");

  if (button && languageMenu) {
    button.addEventListener("click", () => {
      if (languageMenu.classList.contains("hidden")) {
        languageMenu.classList.remove("hidden");
        languageMenu.classList.add("block");
      } else {
        languageMenu.classList.remove("block");
        languageMenu.classList.add("hidden");
      }
    });
  }
</script>
